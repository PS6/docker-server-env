version: '3'
services:
  app:
    hostname: example
    # Application is a packaged docker image
    # hosted on Gitlab Registry (or hub.docker.com)
    image: registry.gitlab.com/example/example
    environment:
      VIRTUAL_HOST: ${HOSTNAME}
      LETSENCRYPT_HOST: ${HOSTNAME}
      LETSENCRYPT_EMAIL: postmaster@example.com
    # These volumes contain all user DATA
    # and will be backuped if your backup container
    # uses --volumes-from option.
    volumes:
      - ./config.docker.yml:/var/www/html/app/conf/config.yml
      - private_files:/var/www/html/files
      - public_files:/var/www/html/web/files
      - gen_src:/var/www/html/app/gen-src/GeneratedNodeSources
      - proxies:/var/www/html/app/gen-src/Proxies
      - compiled:/var/www/html/app/gen-src/Compiled
    depends_on:
      - db
      - solr
    restart: always
    networks: 
      - default
      - frontproxynet
    # If using Traefik 
    # https://docs.traefik.io/user-guide/docker-and-lets-encrypt/
    labels:
      - "traefik.enable=true"
      - "traefik.port=80"
      - "traefik.frontend.rule=Host:${HOSTNAME}"
      - "traefik.frontend.passHostHeader=true"
      # Add domain redirections (example non-www to www redir)
      # - "traefik.frontend.redirect.regex=^https?://example.test/(.*)"
      # - "traefik.frontend.redirect.replacement=http://www.example.test/$${1}"
      # Add a Basic auth protection
      # - "traefik.frontend.auth.basic=${AUTH_BASIC}"
      - "traefik.backend=example"

  db:
    hostname: db.example
    image: mysql:5.7
    networks: 
      - default
    volumes:
        - DBDATA:/var/lib/mysql
    environment:
        MYSQL_DATABASE: ${MYSQL_DATABASE}
        MYSQL_USER: ${MYSQL_USER}
        MYSQL_PASSWORD: ${MYSQL_PASSWORD}
        MYSQL_RANDOM_ROOT_PASSWORD: "yes"
    restart: always

  solr:
    hostname: solr.example
    image: solr
    restart: always
    networks: 
      - default
    volumes:
      - SOLRDATA:/opt/solr/server/solr/mycores
    entrypoint:
      - docker-entrypoint.sh
      - solr-precreate
      - example
      
  backup:
    image: ambroisemaupate/ftp-backup
    networks:
      - default
    depends_on:
      - db
    environment:
      LOCAL_PATH: /var/www/html
      DB_USER: ${MYSQL_USER}
      DB_HOST: db
      DB_PASS: ${MYSQL_PASSWORD}
      DB_NAME: ${MYSQL_DATABASE}
      FTP_PROTO: ${FTP_PROTO}
      FTP_PORT: ${FTP_PORT}
      FTP_HOST: ${FTP_HOST}
      FTP_USER: ${FTP_USER}
      FTP_PASS: ${FTP_PASS}
      REMOTE_PATH: ${FTP_REMOTE_PATH}
    volumes:
      - private_files:/var/www/html/files:ro
      - public_files:/var/www/html/web/files:ro
      - gen_src:/var/www/html/app/gen-src:ro

  backup_cleanup:
    image: ambroisemaupate/ftp-cleanup
    networks:
      - default
    environment:
      FTP_PROTO: ${FTP_PROTO}
      FTP_PORT: ${FTP_PORT}
      FTP_HOST: ${FTP_HOST}
      FTP_USER: ${FTP_USER}
      FTP_PASS:  ${FTP_PASS}
      STORE_DAYS: ${BACKUP_STORE_DAYS}
      FTP_PATH: ${FTP_REMOTE_PATH}
      
volumes:
  private_files:
  public_files:
  gen_src:
  proxies:
  compiled:
  DBDATA:
  SOLRDATA:

networks:
  frontproxynet:
    external: true
